@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: Arial, Helvetica, sans-serif;
}

:root {
  --animation-speed: 1000ms;
  --animation-speed-fast: 250ms;
  --default-cell-bg-color: theme("colors.white");
  --default-cell-border-color: theme("colors.black");
  --default-cell-text-color: theme("colors.black");
  --absent-cell-bg-color: #787c7e;
  --correct-cell-bg-color: #6aaa64;
  --present-cell-bg-color: #fdc038;
}

.navbar {
  max-height: 20vh;
}

.screen-wrapper-custom {
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
  max-height: 80vh;
  height: 100%;
}

.grid-wrapper-custom {
  height: 90%;
  display: grid;
  /* grid-template-columns: repeat(6, minmax(12%, 1fr)); */
  row-gap: 5px;
  max-width: 80%;
  margin: 0 auto;
}

.content-wrapper {
  max-height: calc(100% - 80px - 156px);
  height: 100%;
}

.letter-container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* ++++++++++ */

/* .screen-wrapper-custom {
  width: 100%;
  max-width: 500px;
  margin: 0 auto;
  height: calc(100% - 80px);
  display: flex;
  flex-direction: column;
} */

/* .grid-container {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-grow: 1;
  flex-shrink: 1;
  overflow: hidden;
} */

/* .grid-wrapper-custom {
  display: grid;
  /* height: 70%; */
/* display: grid;
  grid-template-rows: repeat(6, 1fr);
  grid-gap: 5px;
  padding: 10px;
  box-sizing: border-box;
} 

.row-wrapper-custom {
  display: block;
}

.row-custom {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-gap: 5px;
}

.tile-wrapper-custom {
  display: inline-block;
}

.tile-custom {
  width: 100%;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  font-size: 2rem;
  line-height: 2rem;
  font-weight: bold;
  vertical-align: middle;
  box-sizing: border-box;
  color: red;
  text-transform: uppercase;
  user-select: none;
}

.tile-custom::before {
  content: "";
  display: inline-block;
  padding-bottom: 100%;
} */

/* +++++++++++++ */

/* .custom-cell {
  position: relative;
  /* width: 92%; 
}

.custom-cell:before {
  content: "";
  float: left;
  padding-top: 100%;
} */

/* .keyboard-wrapper-custom {
  height: 30%;
  display: flex;
  flex-direction: column;
} */

.cell-fill-animation {
  animation: onTypeCell linear;
  animation-duration: 0.35s;
}

.cell-reveal {
  animation-duration: 0.35s;
  animation-timing-function: linear;
  animation-fill-mode: backwards;
}

.cell-reveal.absent {
  animation-name: revealAbsentCharCell;
}

.cell-reveal.correct {
  animation-name: revealCorrectCharCell;
}

.cell-reveal.present {
  animation-name: revealPresentCharCell;
}

.cell-reveal > .letter-container {
  animation: offsetLetterFlip 0.35s linear;
  animation-fill-mode: backwards;
}

/* svg:hover {
  animation: float infinite;
  animation-duration: var(--animation-speed);
} */

.jiggle {
  animation: jiggle linear;
  animation-duration: var(--animation-speed-fast);
}

@keyframes revealAbsentCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--absent-cell-bg-color);
    border-color: var(--absent-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes revealCorrectCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--correct-cell-bg-color);
    border-color: var(--correct-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes revealPresentCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--present-cell-bg-color);
    border-color: var(--present-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

/* Additional animation on the child div to avoid letters turning upside down/snapping back to upright visual glitch */
@keyframes offsetLetterFlip {
  0% {
    transform: rotateX(0deg);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes onTypeCell {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.1);
  }

  100% {
    transform: scale(1);
  }
}

.shadowed {
  text-shadow: 1px 1px 1px #000000;
}

@keyframes float {
  0% {
    transform: translate(0, 0);
  }
  50% {
    transform: translate(0, -0.5rem);
  }
  100% {
    transform: translate(0, 0);
  }
}

@keyframes jiggle {
  0% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(-0.5rem, 0);
  }
  50% {
    transform: translate(0.5rem, 0);
  }
  75% {
    transform: translate(-0.5rem, 0);
  }
  100% {
    transform: translate(0, 0);
  }
}
